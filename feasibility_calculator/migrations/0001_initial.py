# Generated by Django 3.2.7 on 2021-10-03 17:57

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import frzFeasibilityHandler.myStorage


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ProjectManager',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email address')),
                ('first_name', models.CharField(blank=True, max_length=200, null=True)),
                ('last_name', models.CharField(blank=True, max_length=200, null=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('image', models.ImageField(blank=True, null=True, storage=frzFeasibilityHandler.myStorage.OverwriteStorage(), upload_to='profile_images')),
                ('bas64Image', models.TextField(blank=True, null=True)),
                ('imageType', models.CharField(blank=True, max_length=10, null=True)),
                ('phoneNumber', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'verbose_name_plural': '            3. Supervisors',
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=100)),
                ('total_cost_per_hour_Rs', models.DecimalField(decimal_places=6, default=0, max_digits=18)),
                ('total_revenue_per_hour_Rs', models.DecimalField(decimal_places=6, default=0, max_digits=20)),
                ('total_profits_per_hour', models.DecimalField(decimal_places=6, default=0, max_digits=20)),
                ('reference', models.FileField(blank=True, null=True, storage=frzFeasibilityHandler.myStorage.OverwriteStorage(), upload_to='research_papers')),
                ('remarks', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': '              1. Company',
            },
        ),
        migrations.CreateModel(
            name='Line',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('line_name', models.CharField(max_length=100)),
                ('automation_percentage', models.DecimalField(decimal_places=6, default=0, max_digits=8)),
                ('working_days_per_year', models.DecimalField(decimal_places=6, default=365, max_digits=10)),
                ('working_hours_per_day', models.DecimalField(decimal_places=6, default=24, max_digits=8)),
                ('product_measurement_unit', models.CharField(default='Units', max_length=100)),
                ('line_operating_cost_per_hour_Rs', models.DecimalField(decimal_places=4, default=0, max_digits=14)),
                ('line_product_shipping_cost_per_bulk_Rs', models.DecimalField(decimal_places=6, default=0, max_digits=16)),
                ('line_product_shipping_frequency_per_year', models.DecimalField(decimal_places=6, default=0, max_digits=16)),
                ('line_product_net_shipping_cost_per_hour_Rs', models.DecimalField(decimal_places=6, default=0, max_digits=16)),
                ('line_area_required_m2', models.DecimalField(decimal_places=4, default=0, max_digits=14)),
                ('max_ideal_amount_of_section_product_produced_per_hour', models.DecimalField(decimal_places=4, default=0, max_digits=14)),
                ('entire_maintenance_fraction_per_hour', models.DecimalField(decimal_places=4, default=0, max_digits=6)),
                ('amount_of_section_product_missed_per_hour_for_maintenance', models.DecimalField(decimal_places=4, default=0, max_digits=12)),
                ('net_amount_of_product_produced_per_hour', models.DecimalField(decimal_places=4, default=0, max_digits=14)),
                ('is_last_stage', models.BooleanField(default=False)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('reference', models.FileField(blank=True, null=True, storage=frzFeasibilityHandler.myStorage.OverwriteStorage(), upload_to='research_papers')),
            ],
            options={
                'verbose_name_plural': '         6. Production Lines',
            },
        ),
        migrations.CreateModel(
            name='LineEquipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('equipment_name', models.CharField(max_length=100)),
                ('number_of_equipment_units_needed', models.DecimalField(decimal_places=6, default=0, max_digits=16)),
                ('total_area_required_for_all_units_m2', models.DecimalField(decimal_places=6, default=0, max_digits=12)),
                ('total_running_cost_per_hour_Rs', models.DecimalField(decimal_places=6, default=0, max_digits=16)),
                ('total_parts_replacement_cost_per_hour_Rs', models.DecimalField(decimal_places=6, default=0, max_digits=16)),
                ('total_resources_cost_per_hour_Rs', models.DecimalField(decimal_places=6, default=0, max_digits=16)),
                ('total_maintenance_down_time_fractions_per_hour', models.DecimalField(decimal_places=4, default=0, max_digits=8)),
                ('area_required_per_Equipmentunit_m2', models.DecimalField(decimal_places=6, default=0, max_digits=16)),
                ('parts_replacement_cost_per_equipmentUnit_per_hour_Rs', models.DecimalField(decimal_places=6, default=0, max_digits=16)),
                ('resources_cost_per_equipmentUnit_per_hour_Rs', models.DecimalField(decimal_places=6, default=0, max_digits=16)),
                ('maintenance_down_time_fractions_per_equipmentUnit_per_hour', models.DecimalField(decimal_places=4, default=0, max_digits=8)),
                ('reference', models.FileField(blank=True, null=True, storage=frzFeasibilityHandler.myStorage.OverwriteStorage(), upload_to='research_papers')),
                ('remarks', models.TextField(blank=True, null=True)),
                ('Line', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='line_equipments', to='feasibility_calculator.line')),
            ],
            options={
                'verbose_name_plural': '        7. Line Equipments',
            },
        ),
        migrations.CreateModel(
            name='ResearchPaper',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('research_paper_name', models.CharField(blank=True, max_length=100, null=True)),
                ('link', models.CharField(blank=True, max_length=200, null=True)),
                ('research_pdf', models.FileField(blank=True, null=True, storage=frzFeasibilityHandler.myStorage.OverwriteStorage(), upload_to='research_papers')),
                ('remarks', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': '15. Research Papers',
            },
        ),
        migrations.CreateModel(
            name='Production',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(max_length=100)),
                ('total_start_up_cost_Rs', models.DecimalField(decimal_places=6, default=0, max_digits=16)),
                ('total_production_cost_per_hour_Rs', models.DecimalField(decimal_places=6, default=0, max_digits=16)),
                ('total_size_required_m2', models.DecimalField(decimal_places=6, default=0, max_digits=12)),
                ('total_amount_of_products_fnnished_per_hour', models.DecimalField(decimal_places=6, default=0, max_digits=18)),
                ('total_amount_of_products_rejected_or_leftover_per_hour', models.DecimalField(decimal_places=6, default=0, max_digits=18)),
                ('total_amount_of_products_sold_per_hour', models.DecimalField(decimal_places=6, default=0, max_digits=18)),
                ('product_measurement_unit', models.CharField(default='Units', max_length=100)),
                ('total_cost_per_product_Rs', models.DecimalField(decimal_places=6, default=0, max_digits=18)),
                ('selling_price_per_product_Rs', models.DecimalField(decimal_places=6, default=0, max_digits=18)),
                ('total_revenue_generated_per_hour_Rs', models.DecimalField(decimal_places=6, default=0, max_digits=18)),
                ('total_profit_generated_per_hour_Rs', models.DecimalField(decimal_places=6, default=0, max_digits=18)),
                ('end_line_production_hours_per_day_weekly_projection', models.DecimalField(decimal_places=4, default=0, max_digits=6)),
                ('project_start_date', models.DateTimeField()),
                ('project_end_date', models.DateTimeField(blank=True, null=True)),
                ('break_even_date', models.DateTimeField(blank=True, null=True)),
                ('reference', models.FileField(blank=True, null=True, storage=frzFeasibilityHandler.myStorage.OverwriteStorage(), upload_to='research_papers')),
                ('remarks', models.TextField(blank=True, null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='productions', to='feasibility_calculator.company')),
                ('supervisor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Production', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': '           4. Production Facilities',
            },
        ),
        migrations.CreateModel(
            name='MiscellaneousProductionOperatingCost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('miscellaneous_operation_name', models.CharField(max_length=100)),
                ('per_hour_cost_Rs', models.DecimalField(decimal_places=6, default=0, max_digits=16)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('reference', models.FileField(blank=True, null=True, storage=frzFeasibilityHandler.myStorage.OverwriteStorage(), upload_to='research_papers')),
                ('production', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='miscellaneous_production_costs', to='feasibility_calculator.production')),
            ],
            options={
                'verbose_name_plural': '   12. Miscellaneous Production Facility Operating Costs',
            },
        ),
        migrations.CreateModel(
            name='MiscellaneousProductionInstallationCost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('miscellaneous_installation_name', models.CharField(max_length=100)),
                ('cost_Rs', models.DecimalField(decimal_places=6, default=0, max_digits=16)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('reference', models.FileField(blank=True, null=True, storage=frzFeasibilityHandler.myStorage.OverwriteStorage(), upload_to='research_papers')),
                ('production', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='miscellaneous_installation_costs', to='feasibility_calculator.production')),
            ],
            options={
                'verbose_name_plural': '  13. Miscellaneous Production Facility Installation Costs',
            },
        ),
        migrations.CreateModel(
            name='MiscellaneousProductionAreaRequirement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('miscellaneous_area_role', models.CharField(max_length=100)),
                ('area_allotment_m2', models.DecimalField(decimal_places=6, default=0, max_digits=12)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('reference', models.FileField(blank=True, null=True, storage=frzFeasibilityHandler.myStorage.OverwriteStorage(), upload_to='research_papers')),
                ('production', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='MiscellaneousProductionAreaRequirements', to='feasibility_calculator.production')),
            ],
            options={
                'verbose_name_plural': ' 14. Miscellaneous Production Facility Area Requirements',
            },
        ),
        migrations.CreateModel(
            name='LineRawMaterialCost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('raw_material_name', models.CharField(max_length=100)),
                ('raw_material_bulk_purchase_cost_Rs', models.DecimalField(decimal_places=6, default=0, max_digits=16)),
                ('raw_material_transport_cost_per_bulk_Rs', models.DecimalField(decimal_places=6, default=0, max_digits=16)),
                ('purchase_frquency_per_year', models.DecimalField(decimal_places=6, default=0, max_digits=16)),
                ('raw_material_net_cost_per_hour_Rs', models.DecimalField(decimal_places=6, default=0, max_digits=16)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('reference', models.FileField(blank=True, null=True, storage=frzFeasibilityHandler.myStorage.OverwriteStorage(), upload_to='research_papers')),
                ('line', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='raw_material_costs', to='feasibility_calculator.line')),
            ],
            options={
                'verbose_name_plural': '    11. Line Raw Material Costs',
            },
        ),
        migrations.CreateModel(
            name='LineLabourCost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(max_length=300)),
                ('number_of_labourers_required_for_this_role', models.DecimalField(decimal_places=6, default=0, max_digits=12)),
                ('salary_per_hour_per_labourer_Rs', models.DecimalField(decimal_places=6, default=0, max_digits=16)),
                ('safety_risk_cost_per_hour_per_labourer_Rs', models.DecimalField(decimal_places=6, default=0, max_digits=16)),
                ('total_labourCost_per_hour_Rs', models.DecimalField(decimal_places=6, default=0, max_digits=16)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('reference', models.FileField(blank=True, null=True, storage=frzFeasibilityHandler.myStorage.OverwriteStorage(), upload_to='research_papers')),
                ('line', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='line_labours', to='feasibility_calculator.line')),
            ],
            options={
                'verbose_name_plural': '     10. Line Labour Costs',
            },
        ),
        migrations.CreateModel(
            name='LineEquipmentResourceCost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resource_name', models.CharField(max_length=100)),
                ('resource_unit_of_measure', models.CharField(max_length=100)),
                ('cost_per_single_unit_resource_Rs', models.DecimalField(decimal_places=6, default=0, max_digits=16)),
                ('resource_quantity_needed_per_EquipmentUnit_per_hour', models.DecimalField(decimal_places=6, default=0, max_digits=16)),
                ('cost_per_equipmentUnit_per_hour_for_this_resource_Rs', models.DecimalField(decimal_places=6, default=0, max_digits=16)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('reference', models.FileField(blank=True, null=True, storage=frzFeasibilityHandler.myStorage.OverwriteStorage(), upload_to='research_papers')),
                ('equipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resource_costs', to='feasibility_calculator.lineequipment')),
            ],
            options={
                'verbose_name_plural': '      9. Line Equipment Resource Costs',
            },
        ),
        migrations.CreateModel(
            name='LineEquipmentMaintenanceCost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('maintenance_name', models.CharField(max_length=100)),
                ('maintenance_downTime_fraction_per_equipmentUnit_per_hour', models.DecimalField(decimal_places=4, default=0, max_digits=4)),
                ('part_replacement_cost_per_equipmentUnit_per_hour_Rs', models.DecimalField(decimal_places=6, default=0, max_digits=16)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('reference', models.FileField(blank=True, null=True, storage=frzFeasibilityHandler.myStorage.OverwriteStorage(), upload_to='research_papers')),
                ('equipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='maintenance_costs', to='feasibility_calculator.lineequipment')),
            ],
            options={
                'verbose_name_plural': '       8. Line Equipment Maintenance Costs',
            },
        ),
        migrations.AddField(
            model_name='line',
            name='production',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='production_lines', to='feasibility_calculator.production'),
        ),
        migrations.CreateModel(
            name='EventSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_name', models.CharField(max_length=100)),
                ('days_to_complete', models.DecimalField(decimal_places=6, default=0, max_digits=11)),
                ('event_start_date', models.DateTimeField(blank=True, null=True)),
                ('event_end_date', models.DateTimeField(blank=True, null=True)),
                ('event_cost_Rs', models.DecimalField(decimal_places=6, default=0, max_digits=16)),
                ('latest_previous_dependent_event', models.CharField(blank=True, max_length=100, null=True)),
                ('is_completed', models.BooleanField(default=False)),
                ('reference', models.FileField(blank=True, null=True, storage=frzFeasibilityHandler.myStorage.OverwriteStorage(), upload_to='research_papers')),
                ('remarks', models.TextField(blank=True, null=True)),
                ('previous_related_events', models.ManyToManyField(blank=True, related_name='next_related_events', to='feasibility_calculator.EventSchedule')),
                ('production', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_time_line', to='feasibility_calculator.production')),
            ],
            options={
                'verbose_name_plural': '          5. Project Timelines & Schedules',
                'ordering': ['-event_end_date'],
            },
        ),
        migrations.CreateModel(
            name='CompanyOnlyOperatingCost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('operation_name', models.CharField(max_length=100)),
                ('per_hour_cost_Rs', models.DecimalField(decimal_places=6, default=0, max_digits=16)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('reference', models.FileField(blank=True, null=True, storage=frzFeasibilityHandler.myStorage.OverwriteStorage(), upload_to='research_papers')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='company_only_operating_cost', to='feasibility_calculator.company')),
            ],
            options={
                'verbose_name_plural': '             2. Company Only Operating Costs',
            },
        ),
    ]
