# Generated by Django 3.2.7 on 2021-09-29 12:29

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import frzFeasibilityHandler.myStorage


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ProjectManager',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email address')),
                ('first_name', models.CharField(blank=True, max_length=200, null=True)),
                ('last_name', models.CharField(blank=True, max_length=200, null=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('image', models.ImageField(blank=True, null=True, storage=frzFeasibilityHandler.myStorage.OverwriteStorage(), upload_to='profile_images')),
                ('bas64Image', models.TextField(blank=True, null=True)),
                ('imageType', models.CharField(blank=True, max_length=10, null=True)),
                ('phoneNumber', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AvailableTechnology',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('technology_name', models.CharField(max_length=100)),
                ('total_start_up_cost_Rs', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('total_operating_cost_per_hour_Rs', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('total_revenue_per_hour_Rs', models.DecimalField(decimal_places=2, default=0, max_digits=13)),
                ('profit_margins_per_hour_Rs', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('total_size_required_m2', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('break_even_date', models.DateTimeField(blank=True, null=True)),
                ('is_best_option', models.BooleanField(default=False)),
                ('reference', models.FileField(blank=True, null=True, storage=frzFeasibilityHandler.myStorage.OverwriteStorage(), upload_to='research_papers')),
                ('remarks', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Available Technologies',
            },
        ),
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('equipment_name', models.CharField(max_length=100)),
                ('number_of_equipment_units_needed', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('total_area_required_for_all_units_m2', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('total_running_cost_per_hour_Rs', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('total_parts_replacement_cost_per_hour_Rs', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('total_resources_cost_per_hour_Rs', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('total_maintenance_down_time_fractions_per_hour', models.DecimalField(decimal_places=4, default=0, max_digits=8)),
                ('area_required_per_Equipmentunit_m2', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('parts_replacement_cost_per_equipmentUnit_per_hour_Rs', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('resources_cost_per_equipmentUnit_per_hour_Rs', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('maintenance_down_time_fractions_per_equipmentUnit_per_hour', models.DecimalField(decimal_places=4, default=0, max_digits=8)),
                ('reference', models.FileField(blank=True, null=True, storage=frzFeasibilityHandler.myStorage.OverwriteStorage(), upload_to='research_papers')),
                ('remarks', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Section_Production_Rate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(max_length=100)),
                ('product_measurement_unit', models.CharField(default='Units', max_length=100)),
                ('total_section_operating_cost_per_hour_Rs', models.DecimalField(decimal_places=4, default=0, max_digits=14)),
                ('total_section_area_required_m2', models.DecimalField(decimal_places=4, default=0, max_digits=14)),
                ('max_amount_of_section_product_produced_per_hour', models.DecimalField(decimal_places=4, default=0, max_digits=14)),
                ('entire_maintenance_fraction_per_hour', models.DecimalField(decimal_places=4, default=0, max_digits=6)),
                ('amount_of_section_product_missed_per_hour_for_maintenance', models.DecimalField(decimal_places=4, default=0, max_digits=12)),
                ('net_amount_of_product_produced_per_hour', models.DecimalField(decimal_places=4, default=0, max_digits=14)),
                ('selling_price_per_unit_of_product_Rs', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('total_hourly_revenue_generated_for_this_section_Rs', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('reference', models.FileField(blank=True, null=True, storage=frzFeasibilityHandler.myStorage.OverwriteStorage(), upload_to='research_papers')),
                ('technology', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='production_sections', to='feasibility_calculator.availabletechnology')),
            ],
        ),
        migrations.CreateModel(
            name='ResearchPaper',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('research_paper_name', models.CharField(blank=True, max_length=100, null=True)),
                ('link', models.CharField(blank=True, max_length=200, null=True)),
                ('research_pdf', models.FileField(blank=True, null=True, storage=frzFeasibilityHandler.myStorage.OverwriteStorage(), upload_to='research_papers')),
                ('remarks', models.TextField(blank=True, null=True)),
                ('technology', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='research_papers', to='feasibility_calculator.availabletechnology')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_name', models.CharField(max_length=100)),
                ('production_hours_per_day', models.IntegerField(default=0)),
                ('reference', models.FileField(blank=True, null=True, storage=frzFeasibilityHandler.myStorage.OverwriteStorage(), upload_to='research_papers')),
                ('remarks', models.TextField(blank=True, null=True)),
                ('project_manager', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projects', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Miscellaneous_PlantOperatingCost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('miscellaneous_operation_name', models.CharField(max_length=100)),
                ('per_hour_cost_Rs', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('reference', models.FileField(blank=True, null=True, storage=frzFeasibilityHandler.myStorage.OverwriteStorage(), upload_to='research_papers')),
                ('technology', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='miscellaneous_operating_costs', to='feasibility_calculator.availabletechnology')),
            ],
        ),
        migrations.CreateModel(
            name='Miscellaneous_PlantInstallationCost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('miscellaneous_installation_name', models.CharField(max_length=100)),
                ('cost_Rs', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('reference', models.FileField(blank=True, null=True, storage=frzFeasibilityHandler.myStorage.OverwriteStorage(), upload_to='research_papers')),
                ('technology', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='miscellaneous_installation_costs', to='feasibility_calculator.availabletechnology')),
            ],
        ),
        migrations.CreateModel(
            name='Miscellaneous_Area_Requirement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('miscellaneous_area_role', models.CharField(max_length=100)),
                ('area_allotment_m2', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('reference', models.FileField(blank=True, null=True, storage=frzFeasibilityHandler.myStorage.OverwriteStorage(), upload_to='research_papers')),
                ('technology', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='miscellaneous_area_requirements', to='feasibility_calculator.availabletechnology')),
            ],
        ),
        migrations.CreateModel(
            name='Labour_PlantOperatingCost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(max_length=300)),
                ('number_of_labourers_required_for_this_role', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('salary_per_hour_per_labourer_Rs', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('safety_risk_cost_per_hour_per_labourer_Rs', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('total_labourCost_per_hour_Rs', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('reference', models.FileField(blank=True, null=True, storage=frzFeasibilityHandler.myStorage.OverwriteStorage(), upload_to='research_papers')),
                ('laboProductionSection', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='labours', to='feasibility_calculator.section_production_rate')),
                ('technology', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='labour_operating_costs', to='feasibility_calculator.availabletechnology')),
            ],
        ),
        migrations.CreateModel(
            name='EventSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_name', models.CharField(max_length=100)),
                ('days_to_complete', models.DecimalField(decimal_places=2, default=0, max_digits=7)),
                ('event_start_date', models.DateTimeField(blank=True, null=True)),
                ('event_end_date', models.DateTimeField(blank=True, null=True)),
                ('event_cost_Rs', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('latest_previous_dependent_event', models.CharField(blank=True, max_length=100, null=True)),
                ('reference', models.FileField(blank=True, null=True, storage=frzFeasibilityHandler.myStorage.OverwriteStorage(), upload_to='research_papers')),
                ('remarks', models.TextField(blank=True, null=True)),
                ('previous_related_events', models.ManyToManyField(blank=True, related_name='next_related_events', to='feasibility_calculator.EventSchedule')),
                ('technology', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='time_line', to='feasibility_calculator.availabletechnology')),
            ],
            options={
                'ordering': ['-event_end_date'],
            },
        ),
        migrations.CreateModel(
            name='Equipment_Resource_Cost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resource_name', models.CharField(max_length=100)),
                ('resource_unit_of_measure', models.CharField(max_length=100)),
                ('cost_per_single_unit_resource_Rs', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('resource_quantity_needed_per_EquipmentUnit_per_hour', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('cost_per_equipmentUnit_per_hour_for_this_resource_Rs', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('reference', models.FileField(blank=True, null=True, storage=frzFeasibilityHandler.myStorage.OverwriteStorage(), upload_to='research_papers')),
                ('equipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resource_costs', to='feasibility_calculator.equipment')),
            ],
        ),
        migrations.CreateModel(
            name='Equipment_Maintenance_Cost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('maintenance_name', models.CharField(max_length=100)),
                ('maintenance_downTime_fraction_per_unit_per_hour', models.DecimalField(decimal_places=4, default=0, max_digits=4)),
                ('part_replacement_cost_per_unit_per_hour_Rs', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('reference', models.FileField(blank=True, null=True, storage=frzFeasibilityHandler.myStorage.OverwriteStorage(), upload_to='research_papers')),
                ('equipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='maintenance_costs', to='feasibility_calculator.equipment')),
            ],
        ),
        migrations.AddField(
            model_name='equipment',
            name='equiProductionSection',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='equipments', to='feasibility_calculator.section_production_rate'),
        ),
        migrations.AddField(
            model_name='equipment',
            name='technology',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='equipments', to='feasibility_calculator.availabletechnology'),
        ),
        migrations.AddField(
            model_name='availabletechnology',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='available_technologies', to='feasibility_calculator.project'),
        ),
    ]
